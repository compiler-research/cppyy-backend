diff --git a/src/interpreter/CMakeLists.txt b/src/interpreter/CMakeLists.txt
index 39dc895cce..6d616cb354 100644
--- a/src/interpreter/CMakeLists.txt
+++ b/src/interpreter/CMakeLists.txt
@@ -126,6 +128,8 @@ if(clingtest)
   endif()
   ROOT_ADD_TEST(clingtest-check-cling COMMAND ${CMAKE_COMMAND} --build ${CMAKE_BINARY_DIR} --target check-cling
                                        ENVIRONMENT ${CLINGTEST_EXECUTABLE})
+  set(CMAKE_CXX_VISIBILITY_PRESET default)
+  set(CMAKE_C_VISIBILITY_PRESET default)
 else()
   #---Build LLVM/Clang with symbol visibility=hidden--------------------------------------------------
   set(CMAKE_CXX_VISIBILITY_PRESET hidden)
@@ -483,7 +483,8 @@ else()
   set(Clang_DIR "${LLVM_BINARY_DIR}/lib/cmake/clang/")
 endif()
 
-add_custom_target(CLING)
+# Custuom target "CLING" is already defined in src/cmake/modules/SearchInstalledSoftware.cmake
+# add_custom_target(CLING)
 set(CLING_LIBRARIES clingInterpreter;clingMetaProcessor;clingUtils CACHE STRING "")
 if (builtin_cling)
 
diff --git a/src/interpreter/CMakeLists.txt b/src/interpreter/CMakeLists.txt
index 7002e43f36..dfdf718685 100644
--- a/src/interpreter/CMakeLists.txt
+++ b/src/interpreter/CMakeLists.txt
@@ -504,7 +504,10 @@ if (builtin_cling)
     set(CLING_CXXFLAGS " ${LLVM_DEFS} -DNOMINMAX -D_XKEYCHECK_H")
   else()
     # FIXME: Work hard to remove -Wno-shadow and -Wno-unused-parameter
     set(CLING_CXXFLAGS " ${LLVM_DEFS} -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations")
+    if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
+      string(APPEND CLING_CXXFLAGS " -Wl,-Bsymbolic")
+    endif()
   endif()

   # Set the flags in the parent scope for the rest of the cling-based libraries in ROOT.
diff --git a/src/interpreter/cling/lib/Interpreter/CIFactory.cpp b/src/interpreter/cling/lib/Interpreter/CIFactory.cpp
index 1ab35553fa..b7c99ba281 100644
--- a/src/interpreter/cling/lib/Interpreter/CIFactory.cpp
+++ b/src/interpreter/cling/lib/Interpreter/CIFactory.cpp
@@ -422,7 +422,10 @@ namespace {
       Opts.CXXExceptions = 1;
     }
 
-    //Opts.Modules = 1;
+// TODO: temporary hack, switching off modules for C++20, which is enabled
+// by default otherwise (yet not currently supported in cppyy-cling)
+    if (Opts.CPlusPlus20)
+        Opts.Modules = 0;
 
     // See test/CodeUnloading/PCH/VTables.cpp which implicitly compares clang
     // to cling lang options. They should be the same, we should not have to
